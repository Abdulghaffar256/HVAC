"use client";

import { useState } from "react";

// ‚úÖ Imports for calculators
import HeatDissipationCalculator6 from "@/components/Load Calculator/ele/page";
import HeatTransferCalculator1 from "@/components/Load Calculator/exwall/page";
import HeatTransferCalculator2 from "@/components/Load Calculator/exglass/page";
import HeatTransferThroughRoof3 from "@/components/Load Calculator/exroof/page";
import HeatTransferCalculator7 from "@/components/Load Calculator/intwall/page";
import HeatGeneratedByLighting4 from "@/components/Load Calculator/light/page";
import HeatCalculator5 from "@/components/Load Calculator/people/page";

export default function LoadCalculatorPage() {
  const [results, setResults] = useState({
    exWall: 0,
    glass: 0,
    roof: 0,
    intWall: 0,
    lighting: 0,
    people: 0,
    electrical: 0,
  });

  const [resetKey, setResetKey] = useState(0); // üîπ For reset

  // ‚úÖ Update handler
  const handleResultChange = (key, value) => {
    setResults((prev) => ({ ...prev, [key]: value }));
  };

  // ‚úÖ Totals
  const totalLoad = Object.values(results).reduce((a, b) => a + b, 0);
  const tons = totalLoad / 3.517;

  // ‚úÖ Reset Function
  const handleRecalculate = () => {
    setResults({
      exWall: 0,
      glass: 0,
      roof: 0,
      intWall: 0,
      lighting: 0,
      people: 0,
      electrical: 0,
    });
    setResetKey((prev) => prev + 1); // notify children to reset
  };

  // ‚úÖ Download Report Function
  const handleDownloadReport = () => {
    const content = `
HVAC Cooling Load Report

Total Cooling Load: ${totalLoad.toFixed(2)} kW
Equivalent: ${tons.toFixed(2)} Tons of Refrigeration

Generated by HVAC Load Calculator
    `;
    const blob = new Blob([content], { type: "text/plain" });
    const url = URL.createObjectURL(blob);

    const a = document.createElement("a");
    a.href = url;
    a.download = "HVAC_Load_Report.txt";
    a.click();

    URL.revokeObjectURL(url);
  };

  return (
    <div className="max-w-6xl mx-auto p-8 mt-20 bg-white rounded-2xl shadow-lg">
      <h1 className="text-3xl font-bold text-blue-600 text-center mb-8">
        HVAC Load Calculators
      </h1>

      {/* ‚úÖ Total Load Summary */}
      <div className="p-6 mb-10 bg-gradient-to-r from-blue-500 to-blue-700 text-white rounded-2xl shadow-md text-center">
        <h2 className="text-2xl font-semibold mb-2">Total Cooling Load</h2>
        <p className="text-lg">üîπ {totalLoad.toFixed(2)} kW</p>
        <p className="text-lg">‚ùÑÔ∏è {tons.toFixed(2)} Tons of Refrigeration</p>
      </div>

      {/* ‚úÖ 2-column responsive grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
        <HeatTransferCalculator1
          key={resetKey + "-exwall"}
          onResult={(val) => handleResultChange("exWall", val)}
        />
        <HeatTransferCalculator2
          key={resetKey + "-glass"}
          onResult={(val) => handleResultChange("glass", val)}
        />
        <HeatTransferThroughRoof3
          key={resetKey + "-roof"}
          onResult={(val) => handleResultChange("roof", val)}
        />
        <HeatTransferCalculator7
          key={resetKey + "-intwall"}
          onResult={(val) => handleResultChange("intWall", val)}
        />
        <HeatGeneratedByLighting4
          key={resetKey + "-lighting"}
          onResult={(val) => handleResultChange("lighting", val)}
        />
        <HeatCalculator5
          key={resetKey + "-people"}
          onResult={(val) => handleResultChange("people", val)}
        />
        <div className="md:col-span-2">
          <HeatDissipationCalculator6
            key={resetKey + "-elec"}
            onResult={(val) => handleResultChange("electrical", val)}
          />
        </div>
      </div>

      {/* ‚úÖ Action Buttons */}
      <div className="flex justify-center gap-6 mt-10">
        <button
          onClick={handleRecalculate}
          className="bg-red-500 text-white py-2 px-6 rounded-lg shadow hover:bg-red-600 transition"
        >
          Recalculate
        </button>
        <button
          onClick={handleDownloadReport}
          className="bg-green-500 text-white py-2 px-6 rounded-lg shadow hover:bg-green-600 transition"
        >
          Download Report
        </button>
      </div>
    </div>
  );
}
